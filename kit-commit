#!/usr/bin/env php
<?php

/**
 * CWD Laravel Kit Commit Script
 * 
 * Usage:
 *   php kit-commit -n="Commit message" -v="1.3.2"
 * or simply:
 *   php kit-commit -n="Commit message"
 *   (auto-increments version tag)
 */

$options = getopt("n:v:", ["notes:", "version:"]);
$version = $options['v'] ?? $options['version'] ?? null;
$notes = $options['n'] ?? $options['notes'] ?? null;

/**
 * Utility: Colorized output for better readability
 */
function color($text, $code = '0')
{
    return "\033[{$code}m{$text}\033[0m";
}

/**
 * Utility: Run shell command safely with exit-on-fail
 */
function run($command)
{
    echo color("▶️  $command", "33") . PHP_EOL;
    exec($command, $output, $code);
    if ($code !== 0) {
        echo color("❌ Command failed: $command", "31") . PHP_EOL;
        exit($code);
    }
    return $output;
}

/**
 * Step 1: Auto-increment version if not provided
 */
if (!$version) {
    // Get all git tags, sorted newest-first
    $rawTags = shell_exec("git tag --sort=-v:refname");
    $tags = array_filter(explode("\n", trim((string) $rawTags)));

    $latest = $tags[0] ?? null;

    if ($latest && preg_match('/v?(\d+)\.(\d+)\.(\d+)/', $latest, $m)) {
        // Auto-bump patch version (e.g., v1.13.2 → v1.13.3)
        [$full, $major, $minor, $patch] = $m;
        $version = "{$major}.{$minor}." . ($patch + 1);
        echo color("⚙️  Auto-incrementing patch version to {$version}", "36") . PHP_EOL;
    } else {
        // No previous tags found — initialize baseline
        $version = "1.0.0";
        echo color("⚙️  No previous tag found, initializing to {$version}", "33") . PHP_EOL;
    }
}

/**
 * Step 2: Validate commit notes
 */
if (!$notes) {
    $notes = "v{$version}"; // Default to version as commit message
}

if (!str_starts_with($version, 'v')) {
    $tag = $version;
} else {
    $tag = $version;
}

$escapedNotes = escapeshellarg($notes);
$escapedTag = escapeshellarg($tag);

/**
 * Step 3: Confirm before proceeding
 */
echo PHP_EOL . "About to tag and push version " . color($tag, "32") . " with message: " . color("\"$notes\"", "36") . PHP_EOL;
echo "Continue? [y/N]: ";
$stdin = fopen("php://stdin", "r");
$line = strtolower(trim(fgets($stdin)));
if ($line !== 'y') {
    echo color("❌ Aborted.", "31") . PHP_EOL;
    exit(0);
}
fclose($stdin);

/**
 * Step 4: Git operations
 */
$diff = trim(shell_exec('git status --porcelain'));
if ($diff === '') {
    echo color("⚠️  No changes to commit, skipping commit step.", "33") . PHP_EOL;
} else {
    run("git add .");
    run("git commit -m $escapedNotes");
}

run("git tag -a $escapedTag -m " . escapeshellarg("Release $tag"));
run("git push");
run("git push origin $escapedTag");

/**
 * Step 5: Done
 */
echo PHP_EOL . color("✅ Git commit and tag complete for $tag", "32") . PHP_EOL;
